<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nsu.onlinejudge.dao.MessageMapper">

    <sql id="selectFields">
        message_id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>

    
    <select id="selectConversations" resultType="Message">
        SELECT <include refid="selectFields"></include>
        FROM message
        WHERE message_id IN (
            SELECT MAX(message_id)
            FROM message
            WHERE status != 'DELETE'
            AND (from_id = #{userId} OR to_id = #{userId})
            GROUP BY conversation_id
        )
        ORDER BY message_id DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectConversationCount" resultType="int">
        SELECT COUNT(m.maxid)
        FROM (SELECT MAX(message_id) AS maxid
              FROM message
              WHERE status != 'DELETE'
                AND (from_id = #{userId}
                 OR to_id = #{userId})
              GROUP BY conversation_id) AS m
    </select>

    <select id="selectLetters" resultType="Message">
        SELECT <include refid="selectFields"></include>
        FROM message
        WHERE status != 'DELETE'
        AND conversation_id = #{conversationId}
        ORDER BY message_id
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectLetterCount" resultType="int">
        SELECT COUNT(message_id)
        FROM message
        WHERE status != 'DELETE'
        AND conversation_id = #{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="int">
        SELECT COUNT(message_id)
        FROM message
        WHERE status = 'UNREAD'
        AND to_id = #{userId}
        <if test="conversationId != null">
            and conversation_id = #{conversationId}
        </if>
    </select>
    
    <insert id="insertMessage" parameterType="Message" keyProperty="messageId">
        INSERT INTO message(<include refid="insertFields"></include>)
        VALUES (#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>
    
    <update id="updateMessageStatus">
        UPDATE message
        SET status = #{status}
        WHERE message_id IN
        <foreach collection="messageIdList" item="messageId" open="(" separator="," close=")">
            #{messageId}
        </foreach>
    </update>
</mapper>